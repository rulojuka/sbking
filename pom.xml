<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.sbk</groupId>
	<artifactId>sbking-server</artifactId>
	<version>1.0.0-alpha</version>
	<name>SBKing</name>
	<description>More information at https://github.com/rulojuka/sbking</description>
	<packaging>jar</packaging>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.projectKey>rulojuka_sbking</sonar.projectKey>
		<sonar.organization>rulojuka</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.sources>src/main</sonar.sources>
		<sonar.tests>src/test</sonar.tests>
		<sonar.issue.ignore.multicriteria>e1,e2,e3</sonar.issue.ignore.multicriteria>
		<sonar.issue.ignore.multicriteria.e1.ruleKey>java:S3457</sonar.issue.ignore.multicriteria.e1.ruleKey> <!--stringConcatenation-->
		<sonar.issue.ignore.multicriteria.e1.resourceKey>**/*</sonar.issue.ignore.multicriteria.e1.resourceKey>
		<sonar.issue.ignore.multicriteria.e2.ruleKey>java:S2293</sonar.issue.ignore.multicriteria.e2.ruleKey> <!--diamondOperatorTypeInference-->
		<sonar.issue.ignore.multicriteria.e2.resourceKey>**/*</sonar.issue.ignore.multicriteria.e2.resourceKey>
		<sonar.issue.ignore.multicriteria.e3.ruleKey>java:S2142</sonar.issue.ignore.multicriteria.e3.ruleKey> <!--ignoredInterruptedException-->
		<sonar.issue.ignore.multicriteria.e3.resourceKey>**/*</sonar.issue.ignore.multicriteria.e3.resourceKey>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository (copied from Super POM)</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>clojars</id>
			<name>Used to resolve kryonet</name>
			<url>https://repo.clojars.org</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.12.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.20.0</version>
		</dependency>
		<dependency>
			<groupId>kryonet</groupId>
			<artifactId>kryonet</artifactId>
			<version>2.21</version>
		</dependency>
		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>kryo</artifactId>
			<version>5.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>2.9.0</version>
		</dependency>
		<!-- This commons-beanutils is needed for commons-configuration2 because the maven package is broken. -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>6.2.2.Final</version>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.0.33</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- validate: check if all information necessary for the build is available -->
			<plugin>
				<!-- We only use one goal: checkstyle:check -->
				<!-- Bound by default to lifecycle phase: verify -->
				<!-- We bind it to: validate -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<configLocation>checkstyle/sbking_checkstyle.xml</configLocation>
					<encoding>UTF-8</encoding>
					<failOnViolation>true</failOnViolation>
					<enableFilesSummary>false</enableFilesSummary>
					<logViolationsToConsole>true</logViolationsToConsole>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- compile: compile the source code -->
			<!-- test-compile: compile the test source code -->
			<plugin>
				<!-- There are two goals: compiler:compile and compiler:testCompile -->
				<!-- Bound by default to: compile and test-compile -->
				<!-- Here, we exclude the client-only related files -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<release>11</release>
					<excludes>
						<exclude>br/com/sbk/sbking/gui/**/*.java</exclude>
						<exclude>br/com/sbk/sbking/networking/client/*.java</exclude>
					</excludes>
					<testExcludes>
						<exclude>br/com/sbk/sbking/learning/**/*.java</exclude>
						<exclude>br/com/sbk/sbking/gui/**/*.java</exclude>
					</testExcludes>
				</configuration>
			</plugin>

			<!-- test: run unit tests -->
			<plugin>
				<!-- Only goal: surefire:test -->
				<!-- Bound by default to lifecycle phase: test -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<excludes>
						<exclude>br/com/sbk/sbking/persistence/*.java</exclude> <!-- This should run on the integration-test phase -->
					</excludes>
				</configuration>
			</plugin>

			<!-- package: package compiled source code into the distributable format (jar, war, â€¦) -->
			<plugin>
				<!-- Only goal: assembly:single -->
				<!-- Bound to lifecycle phase: test -->
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<mainClass>br.com.sbk.sbking.networking.server.main.LobbyServerStarter</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- verify: run any checks to verify the package is valid and meets quality criteria. -->
			<plugin>
				<!-- There are many different goals -->
				<!-- According to documentation, prepare-agent and report should bind themselves automatically -->
				<!-- Yet, this does not happen, so we declare them explicitly -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.10</version>
				<executions>
					<execution>
						<id>jacoco-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- There are many different goals -->
				<!-- Here, we bind spotbugs:spotbugs to: verify -->
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.7.3.4</version>
				<executions>
					<execution>
						<id>spotbugs-spotbugs</id>
						<phase>verify</phase>
						<goals>
							<goal>spotbugs</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
